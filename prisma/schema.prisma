// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categories {
  id          String   @id @default(cuid())
  title       String   @unique @db.VarChar(255)
  description String?  @db.VarChar(255)
  sortOrder   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  menus       Menus[]

  restaurantId String

  @@index([restaurantId], name: "restaurant_id_index_category")
  @@index([title], name: "title_index")
  @@index([sortOrder], name: "sort_order_index")
}

model Menus {
  id          String        @id @default(cuid())
  title       String        @unique @db.VarChar(255)
  price       Float
  description String?       @db.VarChar(255)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  category    Categories    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String
  BasketItems BasketItems[]

  @@index([categoryId], name: "category_id_index")
  @@index([price], name: "price_index")
}

model Basket {
  id           String        @id @default(cuid())
  customerId   String        @db.VarChar(255)
  restaurantId String        @db.VarChar(255)
  items        BasketItems[]
  note         String?       @db.Text // Optional customer note
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@index([customerId], name: "customer_id_index_basket")
  @@index([restaurantId], name: "restaurant_id_index_basket")
}

model BasketItems {
  id        String   @id @default(cuid())
  quantity  Int      @default(1)
  price     Float // Price at the time of adding to basket
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  menu     Menus  @relation(fields: [menuId], references: [id])
  Basket   Basket @relation(fields: [basketId], references: [id])
  menuId   String @db.VarChar(255)
  basketId String
}
